# Set up account
sudo adduser deploy
echo "deploy ALL=(ALL) NOPASSWD:ALL" | sudo tee --append /etc/sudoers
sudo su deploy
cd
mkdir ~/.ssh
echo "ssh-rsa DEPLOY_PUB_KEY deploy@pagelens.net" > ~/.ssh/authorized_keys
scp ~/.ssh/deploy_at_pagelens.net deploy@162.243.146.103:~/.ssh/
nano ~/.ssh/config
IdentityFile ~/.ssh/deploy_at_pagelens.net

host code.pagelens.net
hostname code.pagelens.net
port 2202
IdentityFile ~/.ssh/deploy_at_pagelens.net

nano ~/.bashrc
export SECRET_KEY_BASE=""
export FACEBOOK_API_KEY=""
export FACEBOOK_SECRET=""
export TWITTER_API_KEY=""
export TWITTER_SECRET=""
export GOOGLE_STORAGE_ACCESS_KEY=""
export GOOGLE_STORAGE_SECRET=""

# Base
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |  sudo apt-key add -
echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
sudo apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get -y install git-core curl python-software-properties ufw postgresql-client-9.3 libpq-dev build-essential openssl libreadline6 libreadline6-dev zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison
\curl -sSL https://get.rvm.io | bash -s stable --ruby

# ElasticSearch
# http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-repositories.html
wget -qO - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb http://packages.elasticsearch.org/elasticsearch/1.3/debian stable main" | sudo tee /etc/apt/sources.list.d/elasticsearch.list
sudo apt-get -y update
sudo apt-get -y install elasticsearch
sudo update-rc.d elasticsearch defaults 95 10
sudo /etc/init.d/elasticsearch start

# PostgreSQL
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |  sudo apt-key add -
echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
sudo apt-get -y update
sudo apt-get -y install postgresql-9.3 postgresql-contrib libpq-dev

# Nginx
sudo add-apt-repository -y ppa:nginx/stable
sudo apt-get -y update
sudo apt-get -y install nginx geoip-database
wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
gunzip GeoLiteCity.dat.gz
sudo cp GeoLiteCity.dat /usr/share/GeoIP/

# Redis
sudo add-apt-repository -y ppa:rwky/redis
sudo apt-get -y update
sudo apt-get install -y redis-server
# sudo sed -i 's/^bind\s/#bind/' /etc/redis/redis.conf

# Deploy
cap staging safe_deploy_to:ensure
cap staging packages:install
#cap staging postgresql:generate_database_yml
#cap staging postgresql:create_db_user
#cap staging postgresql:create_database
cap staging setup
cap staging deploy

# if failed, run this manually:
cd /var/www/omakase/current && /tmp/omakase/rvm-auto.sh 2.1.2 bundle exec unicorn -D -c /var/www/omakase/shared/config/unicorn.rb -E staging
